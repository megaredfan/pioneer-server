// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: global.proto

package cn.litgame.wargame.core.auto;

public final class GameGlobalProtos {
  private GameGlobalProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code litgame.game.PlatformType}
   */
  public enum PlatformType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>IOS = 1;</code>
     */
    IOS(0, 1),
    /**
     * <code>UC = 2;</code>
     */
    UC(1, 2),
    /**
     * <code>XIAOMI = 3;</code>
     */
    XIAOMI(2, 3),
    /**
     * <code>A360 = 4;</code>
     */
    A360(3, 4),
    /**
     * <code>BAIDU = 5;</code>
     */
    BAIDU(4, 5),
    ;

    /**
     * <code>IOS = 1;</code>
     */
    public static final int IOS_VALUE = 1;
    /**
     * <code>UC = 2;</code>
     */
    public static final int UC_VALUE = 2;
    /**
     * <code>XIAOMI = 3;</code>
     */
    public static final int XIAOMI_VALUE = 3;
    /**
     * <code>A360 = 4;</code>
     */
    public static final int A360_VALUE = 4;
    /**
     * <code>BAIDU = 5;</code>
     */
    public static final int BAIDU_VALUE = 5;


    public final int getNumber() { return value; }

    public static PlatformType valueOf(int value) {
      switch (value) {
        case 1: return IOS;
        case 2: return UC;
        case 3: return XIAOMI;
        case 4: return A360;
        case 5: return BAIDU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PlatformType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PlatformType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PlatformType>() {
            public PlatformType findValueByNumber(int number) {
              return PlatformType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.litgame.wargame.core.auto.GameGlobalProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final PlatformType[] VALUES = values();

    public static PlatformType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PlatformType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:litgame.game.PlatformType)
  }

  /**
   * Protobuf enum {@code litgame.game.BufferId}
   */
  public enum BufferId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Public = 1;</code>
     */
    Public(0, 1),
    ;

    /**
     * <code>Public = 1;</code>
     */
    public static final int Public_VALUE = 1;


    public final int getNumber() { return value; }

    public static BufferId valueOf(int value) {
      switch (value) {
        case 1: return Public;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BufferId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BufferId>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BufferId>() {
            public BufferId findValueByNumber(int number) {
              return BufferId.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.litgame.wargame.core.auto.GameGlobalProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final BufferId[] VALUES = values();

    public static BufferId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BufferId(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:litgame.game.BufferId)
  }

  /**
   * Protobuf enum {@code litgame.game.VersionStatus}
   */
  public enum VersionStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NORMAL = 1;</code>
     *
     * <pre>
     *正常登录
     * </pre>
     */
    NORMAL(0, 1),
    /**
     * <code>STOP = 2;</code>
     *
     * <pre>
     *服务器拒绝登录
     * </pre>
     */
    STOP(1, 2),
    /**
     * <code>UPDATE = 3;</code>
     *
     * <pre>
     *需要更新配置文件后进入游戏
     * </pre>
     */
    UPDATE(2, 3),
    ;

    /**
     * <code>NORMAL = 1;</code>
     *
     * <pre>
     *正常登录
     * </pre>
     */
    public static final int NORMAL_VALUE = 1;
    /**
     * <code>STOP = 2;</code>
     *
     * <pre>
     *服务器拒绝登录
     * </pre>
     */
    public static final int STOP_VALUE = 2;
    /**
     * <code>UPDATE = 3;</code>
     *
     * <pre>
     *需要更新配置文件后进入游戏
     * </pre>
     */
    public static final int UPDATE_VALUE = 3;


    public final int getNumber() { return value; }

    public static VersionStatus valueOf(int value) {
      switch (value) {
        case 1: return NORMAL;
        case 2: return STOP;
        case 3: return UPDATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VersionStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<VersionStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VersionStatus>() {
            public VersionStatus findValueByNumber(int number) {
              return VersionStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.litgame.wargame.core.auto.GameGlobalProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final VersionStatus[] VALUES = values();

    public static VersionStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private VersionStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:litgame.game.VersionStatus)
  }

  /**
   * Protobuf enum {@code litgame.game.TroopId}
   */
  public enum TroopId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ship = 2017;</code>
     *
     * <pre>
     *运输船
     * </pre>
     */
    ship(0, 2017),
    ;

    /**
     * <code>ship = 2017;</code>
     *
     * <pre>
     *运输船
     * </pre>
     */
    public static final int ship_VALUE = 2017;


    public final int getNumber() { return value; }

    public static TroopId valueOf(int value) {
      switch (value) {
        case 2017: return ship;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TroopId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TroopId>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TroopId>() {
            public TroopId findValueByNumber(int number) {
              return TroopId.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.litgame.wargame.core.auto.GameGlobalProtos.getDescriptor().getEnumTypes().get(3);
    }

    private static final TroopId[] VALUES = values();

    public static TroopId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TroopId(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:litgame.game.TroopId)
  }

  /**
   * Protobuf enum {@code litgame.game.MarketType}
   */
  public enum MarketType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MARKET_BUY = 1;</code>
     *
     * <pre>
     *买
     * </pre>
     */
    MARKET_BUY(0, 1),
    /**
     * <code>MARKET_SELL = 2;</code>
     *
     * <pre>
     *卖
     * </pre>
     */
    MARKET_SELL(1, 2),
    /**
     * <code>MARKET_FRIEND = 3;</code>
     *
     * <pre>
     *贸易伙伴
     * </pre>
     */
    MARKET_FRIEND(2, 3),
    ;

    /**
     * <code>MARKET_BUY = 1;</code>
     *
     * <pre>
     *买
     * </pre>
     */
    public static final int MARKET_BUY_VALUE = 1;
    /**
     * <code>MARKET_SELL = 2;</code>
     *
     * <pre>
     *卖
     * </pre>
     */
    public static final int MARKET_SELL_VALUE = 2;
    /**
     * <code>MARKET_FRIEND = 3;</code>
     *
     * <pre>
     *贸易伙伴
     * </pre>
     */
    public static final int MARKET_FRIEND_VALUE = 3;


    public final int getNumber() { return value; }

    public static MarketType valueOf(int value) {
      switch (value) {
        case 1: return MARKET_BUY;
        case 2: return MARKET_SELL;
        case 3: return MARKET_FRIEND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MarketType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MarketType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MarketType>() {
            public MarketType findValueByNumber(int number) {
              return MarketType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.litgame.wargame.core.auto.GameGlobalProtos.getDescriptor().getEnumTypes().get(4);
    }

    private static final MarketType[] VALUES = values();

    public static MarketType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MarketType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:litgame.game.MarketType)
  }

  /**
   * Protobuf enum {@code litgame.game.GameActionType}
   */
  public enum GameActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRODUCTION_LAND = 1;</code>
     *
     * <pre>
     *生产陆军
     * </pre>
     */
    PRODUCTION_LAND(0, 1),
    /**
     * <code>PRODUCTION_FLY = 2;</code>
     *
     * <pre>
     *生产空军
     * </pre>
     */
    PRODUCTION_FLY(1, 2),
    /**
     * <code>MARKET = 3;</code>
     *
     * <pre>
     *市场
     * </pre>
     */
    MARKET(2, 3),
    /**
     * <code>BATTLE = 4;</code>
     *
     * <pre>
     *战争
     * </pre>
     */
    BATTLE(3, 4),
    /**
     * <code>TRANSPORT = 5;</code>
     *
     * <pre>
     *运输
     * </pre>
     */
    TRANSPORT(4, 5),
    /**
     * <code>CREATE_CITY = 6;</code>
     *
     * <pre>
     *创建城市
     * </pre>
     */
    CREATE_CITY(5, 6),
    /**
     * <code>NEXT_STATE_ACTION = 7;</code>
     *
     * <pre>
     *切换到下一个状态，好多的定时任务都需要状态切换，一个定时任务触发另一个定时任务
     * </pre>
     */
    NEXT_STATE_ACTION(6, 7),
    /**
     * <code>BATTLE_ROUND = 8;</code>
     *
     * <pre>
     *战斗中每回合结算
     * </pre>
     */
    BATTLE_ROUND(7, 8),
    ;

    /**
     * <code>PRODUCTION_LAND = 1;</code>
     *
     * <pre>
     *生产陆军
     * </pre>
     */
    public static final int PRODUCTION_LAND_VALUE = 1;
    /**
     * <code>PRODUCTION_FLY = 2;</code>
     *
     * <pre>
     *生产空军
     * </pre>
     */
    public static final int PRODUCTION_FLY_VALUE = 2;
    /**
     * <code>MARKET = 3;</code>
     *
     * <pre>
     *市场
     * </pre>
     */
    public static final int MARKET_VALUE = 3;
    /**
     * <code>BATTLE = 4;</code>
     *
     * <pre>
     *战争
     * </pre>
     */
    public static final int BATTLE_VALUE = 4;
    /**
     * <code>TRANSPORT = 5;</code>
     *
     * <pre>
     *运输
     * </pre>
     */
    public static final int TRANSPORT_VALUE = 5;
    /**
     * <code>CREATE_CITY = 6;</code>
     *
     * <pre>
     *创建城市
     * </pre>
     */
    public static final int CREATE_CITY_VALUE = 6;
    /**
     * <code>NEXT_STATE_ACTION = 7;</code>
     *
     * <pre>
     *切换到下一个状态，好多的定时任务都需要状态切换，一个定时任务触发另一个定时任务
     * </pre>
     */
    public static final int NEXT_STATE_ACTION_VALUE = 7;
    /**
     * <code>BATTLE_ROUND = 8;</code>
     *
     * <pre>
     *战斗中每回合结算
     * </pre>
     */
    public static final int BATTLE_ROUND_VALUE = 8;


    public final int getNumber() { return value; }

    public static GameActionType valueOf(int value) {
      switch (value) {
        case 1: return PRODUCTION_LAND;
        case 2: return PRODUCTION_FLY;
        case 3: return MARKET;
        case 4: return BATTLE;
        case 5: return TRANSPORT;
        case 6: return CREATE_CITY;
        case 7: return NEXT_STATE_ACTION;
        case 8: return BATTLE_ROUND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GameActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameActionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameActionType>() {
            public GameActionType findValueByNumber(int number) {
              return GameActionType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.litgame.wargame.core.auto.GameGlobalProtos.getDescriptor().getEnumTypes().get(5);
    }

    private static final GameActionType[] VALUES = values();

    public static GameActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GameActionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:litgame.game.GameActionType)
  }

  /**
   * Protobuf enum {@code litgame.game.MessageType}
   *
   * <pre>
   *标识属于哪个模块，1000以内的id留给ui线程间的消息id
   * </pre>
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MSG_ID_LOGIN = 1000;</code>
     *
     * <pre>
     *登陆，以及版本检查
     * </pre>
     */
    MSG_ID_LOGIN(0, 1000),
    /**
     * <code>MSG_ID_CHECK_VERSION = 1001;</code>
     *
     * <pre>
     *检查版本号
     * </pre>
     */
    MSG_ID_CHECK_VERSION(1, 1001),
    /**
     * <code>MSG_ID_PING = 1002;</code>
     *
     * <pre>
     *ping
     * </pre>
     */
    MSG_ID_PING(2, 1002),
    /**
     * <code>MSG_ID_BIND_ACCOUNT = 1003;</code>
     *
     * <pre>
     *bind account
     * </pre>
     */
    MSG_ID_BIND_ACCOUNT(3, 1003),
    /**
     * <code>MSG_ID_CHECK_GAMECENTER = 1004;</code>
     *
     * <pre>
     *check ios game center
     * </pre>
     */
    MSG_ID_CHECK_GAMECENTER(4, 1004),
    /**
     * <code>MSG_ID_PAYMENT = 1005;</code>
     *
     * <pre>
     * 支付
     * </pre>
     */
    MSG_ID_PAYMENT(5, 1005),
    /**
     * <code>MSG_ID_FUNCTION_SWITCH = 1006;</code>
     *
     * <pre>
     *功能显示开关
     * </pre>
     */
    MSG_ID_FUNCTION_SWITCH(6, 1006),
    /**
     * <code>MSG_ID_CREATE_PLAYER = 1007;</code>
     *
     * <pre>
     *创建角色
     * </pre>
     */
    MSG_ID_CREATE_PLAYER(7, 1007),
    /**
     * <code>MSG_ID_NEW_PLAYER_PROGRESS = 1008;</code>
     *
     * <pre>
     *新手指导进度
     * </pre>
     */
    MSG_ID_NEW_PLAYER_PROGRESS(8, 1008),
    /**
     * <code>MSG_ID_BUILD_LEVEL_UP = 1009;</code>
     *
     * <pre>
     *建筑升级
     * </pre>
     */
    MSG_ID_BUILD_LEVEL_UP(9, 1009),
    /**
     * <code>MSG_ID_BUILD_SHOW = 1010;</code>
     *
     * <pre>
     *打开建筑面板
     * </pre>
     */
    MSG_ID_BUILD_SHOW(10, 1010),
    /**
     * <code>MSG_ID_STUDY_TECH = 1011;</code>
     *
     * <pre>
     *学习科技
     * </pre>
     */
    MSG_ID_STUDY_TECH(11, 1011),
    /**
     * <code>MSG_ID_LAND_DONATION = 1012;</code>
     *
     * <pre>
     *岛屿捐献
     * </pre>
     */
    MSG_ID_LAND_DONATION(12, 1012),
    /**
     * <code>MSG_ID_PRODUCTION_TROOP = 1013;</code>
     *
     * <pre>
     *生产部队
     * </pre>
     */
    MSG_ID_PRODUCTION_TROOP(13, 1013),
    /**
     * <code>MSG_ID_BUY_SHIP = 1014;</code>
     *
     * <pre>
     *购买运输船
     * </pre>
     */
    MSG_ID_BUY_SHIP(14, 1014),
    /**
     * <code>MSG_ID_SHOW_CITY = 1015;</code>
     *
     * <pre>
     *显示城市
     * </pre>
     */
    MSG_ID_SHOW_CITY(15, 1015),
    /**
     * <code>MSG_ID_SHOW_LAND = 1016;</code>
     *
     * <pre>
     *显示岛屿
     * </pre>
     */
    MSG_ID_SHOW_LAND(16, 1016),
    /**
     * <code>MSG_ID_SHOW_WORLD = 1017;</code>
     *
     * <pre>
     *显示世界
     * </pre>
     */
    MSG_ID_SHOW_WORLD(17, 1017),
    /**
     * <code>MSG_ID_CREATE_BUILDING = 1018;</code>
     *
     * <pre>
     *建造一个建筑
     * </pre>
     */
    MSG_ID_CREATE_BUILDING(18, 1018),
    /**
     * <code>MSG_ID_SHOW_LAND_RESOURCE = 1019;</code>
     *
     * <pre>
     *点击岛屿的资源矿
     * </pre>
     */
    MSG_ID_SHOW_LAND_RESOURCE(19, 1019),
    /**
     * <code>MSG_ID_SPEEDY_BUILDING = 1020;</code>
     *
     * <pre>
     *加速建造
     * </pre>
     */
    MSG_ID_SPEEDY_BUILDING(20, 1020),
    /**
     * <code>MSG_ID_CHECK_BUILD = 1021;</code>
     *
     * <pre>
     *检查建筑状态
     * </pre>
     */
    MSG_ID_CHECK_BUILD(21, 1021),
    /**
     * <code>MSG_ID_SET_WORKER = 1022;</code>
     *
     * <pre>
     *设置资源矿的工人
     * </pre>
     */
    MSG_ID_SET_WORKER(22, 1022),
    /**
     * <code>MSG_ID_SET_PUB_LEVEL = 1023;</code>
     *
     * <pre>
     *设置酒馆、饭店的消耗等级
     * </pre>
     */
    MSG_ID_SET_PUB_LEVEL(23, 1023),
    /**
     * <code>MSG_ID_SET_TECHER = 1024;</code>
     *
     * <pre>
     *设置科学家数量
     * </pre>
     */
    MSG_ID_SET_TECHER(24, 1024),
    /**
     * <code>MSG_ID_SHOW_TECH_BUILD = 1025;</code>
     *
     * <pre>
     *点击研究院，显示的面板
     * </pre>
     */
    MSG_ID_SHOW_TECH_BUILD(25, 1025),
    /**
     * <code>MSG_ID_UPDATE_RESOURCE = 1026;</code>
     *
     * <pre>
     *更新资源
     * </pre>
     */
    MSG_ID_UPDATE_RESOURCE(26, 1026),
    /**
     * <code>MSG_ID_UPDATE_PLAYER_INFO = 1027;</code>
     *
     * <pre>
     *更新角色的全局信息
     * </pre>
     */
    MSG_ID_UPDATE_PLAYER_INFO(27, 1027),
    /**
     * <code>MSG_ID_SHOW_TECH_PROGRESS = 1028;</code>
     *
     * <pre>
     *显示科技的进度
     * </pre>
     */
    MSG_ID_SHOW_TECH_PROGRESS(28, 1028),
    /**
     * <code>MSG_ID_CHANGE_CITY_NAME = 1029;</code>
     *
     * <pre>
     *更改城市名字
     * </pre>
     */
    MSG_ID_CHANGE_CITY_NAME(29, 1029),
    /**
     * <code>MSG_ID_CREATE_CITY = 1031;</code>
     *
     * <pre>
     *创建分城
     * </pre>
     */
    MSG_ID_CREATE_CITY(30, 1031),
    /**
     * <code>MSG_ID_MOVE_CITY = 1032;</code>
     *
     * <pre>
     *迁城
     * </pre>
     */
    MSG_ID_MOVE_CITY(31, 1032),
    /**
     * <code>MSG_ID_CANCEL_PRODUCTION_TROOP = 1033;</code>
     *
     * <pre>
     *取消生产部队
     * </pre>
     */
    MSG_ID_CANCEL_PRODUCTION_TROOP(32, 1033),
    /**
     * <code>MSG_ID_DISBAND_TROOP = 1034;</code>
     *
     * <pre>
     *解散部队
     * </pre>
     */
    MSG_ID_DISBAND_TROOP(33, 1034),
    /**
     * <code>MSG_ID_SET_CAPITAL = 1035;</code>
     *
     * <pre>
     *设置为首都
     * </pre>
     */
    MSG_ID_SET_CAPITAL(34, 1035),
    /**
     * <code>MSG_ID_CHANGE_SYSTEM = 1036;</code>
     *
     * <pre>
     *革命
     * </pre>
     */
    MSG_ID_CHANGE_SYSTEM(35, 1036),
    /**
     * <code>MSG_ID_GET_PLAYER_PACKITEM = 1037;</code>
     *
     * <pre>
     *背包数据
     * </pre>
     */
    MSG_ID_GET_PLAYER_PACKITEM(36, 1037),
    /**
     * <code>MSG_ID_GET_SHOP_SHELF = 1038;</code>
     *
     * <pre>
     *商店
     * </pre>
     */
    MSG_ID_GET_SHOP_SHELF(37, 1038),
    /**
     * <code>MSG_ID_SHOW_BUY_SHIP = 1039;</code>
     *
     * <pre>
     *打开购买运输船的界面
     * </pre>
     */
    MSG_ID_SHOW_BUY_SHIP(38, 1039),
    /**
     * <code>MSG_ID_SHOW_KING_INFO = 1040;</code>
     *
     * <pre>
     *显示国王信息
     * </pre>
     */
    MSG_ID_SHOW_KING_INFO(39, 1040),
    /**
     * <code>MSG_ID_SHOW_RANK = 1041;</code>
     *
     * <pre>
     *显示排行信息
     * </pre>
     */
    MSG_ID_SHOW_RANK(40, 1041),
    /**
     * <code>MSG_ID_CANCEL_TRANSPORT_TASK = 1042;</code>
     *
     * <pre>
     *取消运输船任务
     * </pre>
     */
    MSG_ID_CANCEL_TRANSPORT_TASK(41, 1042),
    /**
     * <code>MSG_ID_START_TRANSPORT_TASK = 1043;</code>
     *
     * <pre>
     *开始运输船任务
     * </pre>
     */
    MSG_ID_START_TRANSPORT_TASK(42, 1043),
    /**
     * <code>MSG_ID_OVER_TRANSPORT_TASK = 1044;</code>
     *
     * <pre>
     *立即完成运输船任务
     * </pre>
     */
    MSG_ID_OVER_TRANSPORT_TASK(43, 1044),
    /**
     * <code>MSG_ID_BUY_PERSON = 1045;</code>
     *
     * <pre>
     *购买人口
     * </pre>
     */
    MSG_ID_BUY_PERSON(44, 1045),
    /**
     * <code>MSG_ID_QUERY_MARKET_ORDER = 1046;</code>
     *
     * <pre>
     *查询市场订单
     * </pre>
     */
    MSG_ID_QUERY_MARKET_ORDER(45, 1046),
    /**
     * <code>MSG_ID_CREATE_CITY_ORDER = 1047;</code>
     *
     * <pre>
     *创建订单
     * </pre>
     */
    MSG_ID_CREATE_CITY_ORDER(46, 1047),
    /**
     * <code>MSG_ID_SHOW_MY_ORDER = 1048;</code>
     *
     * <pre>
     *查询我的订单
     * </pre>
     */
    MSG_ID_SHOW_MY_ORDER(47, 1048),
    /**
     * <code>MSG_ID_GM_COMMAND = 1049;</code>
     *
     * <pre>
     *gm模式命令
     * </pre>
     */
    MSG_ID_GM_COMMAND(48, 1049),
    /**
     * <code>MSG_ID_DEAL = 1050;</code>
     *
     * <pre>
     *交易
     * </pre>
     */
    MSG_ID_DEAL(49, 1050),
    /**
     * <code>MSG_ID_MILITARY_INFO = 1051;</code>
     *
     * <pre>
     *军事顾问
     * </pre>
     */
    MSG_ID_MILITARY_INFO(50, 1051),
    /**
     * <code>MSG_ID_MILITARY_ACTION = 1052;</code>
     *
     * <pre>
     *军事行动
     * </pre>
     */
    MSG_ID_MILITARY_ACTION(51, 1052),
    /**
     * <code>MSG_ID_BATTLE_LIST = 1053;</code>
     *
     * <pre>
     *战斗列表
     * </pre>
     */
    MSG_ID_BATTLE_LIST(52, 1053),
    /**
     * <code>MSG_ID_ROUND_LIST = 1054;</code>
     *
     * <pre>
     *回合列表
     * </pre>
     */
    MSG_ID_ROUND_LIST(53, 1054),
    /**
     * <code>MSG_ID_ROUND_DETAIL = 1055;</code>
     *
     * <pre>
     *回合详情
     * </pre>
     */
    MSG_ID_ROUND_DETAIL(54, 1055),
    ;

    /**
     * <code>MSG_ID_LOGIN = 1000;</code>
     *
     * <pre>
     *登陆，以及版本检查
     * </pre>
     */
    public static final int MSG_ID_LOGIN_VALUE = 1000;
    /**
     * <code>MSG_ID_CHECK_VERSION = 1001;</code>
     *
     * <pre>
     *检查版本号
     * </pre>
     */
    public static final int MSG_ID_CHECK_VERSION_VALUE = 1001;
    /**
     * <code>MSG_ID_PING = 1002;</code>
     *
     * <pre>
     *ping
     * </pre>
     */
    public static final int MSG_ID_PING_VALUE = 1002;
    /**
     * <code>MSG_ID_BIND_ACCOUNT = 1003;</code>
     *
     * <pre>
     *bind account
     * </pre>
     */
    public static final int MSG_ID_BIND_ACCOUNT_VALUE = 1003;
    /**
     * <code>MSG_ID_CHECK_GAMECENTER = 1004;</code>
     *
     * <pre>
     *check ios game center
     * </pre>
     */
    public static final int MSG_ID_CHECK_GAMECENTER_VALUE = 1004;
    /**
     * <code>MSG_ID_PAYMENT = 1005;</code>
     *
     * <pre>
     * 支付
     * </pre>
     */
    public static final int MSG_ID_PAYMENT_VALUE = 1005;
    /**
     * <code>MSG_ID_FUNCTION_SWITCH = 1006;</code>
     *
     * <pre>
     *功能显示开关
     * </pre>
     */
    public static final int MSG_ID_FUNCTION_SWITCH_VALUE = 1006;
    /**
     * <code>MSG_ID_CREATE_PLAYER = 1007;</code>
     *
     * <pre>
     *创建角色
     * </pre>
     */
    public static final int MSG_ID_CREATE_PLAYER_VALUE = 1007;
    /**
     * <code>MSG_ID_NEW_PLAYER_PROGRESS = 1008;</code>
     *
     * <pre>
     *新手指导进度
     * </pre>
     */
    public static final int MSG_ID_NEW_PLAYER_PROGRESS_VALUE = 1008;
    /**
     * <code>MSG_ID_BUILD_LEVEL_UP = 1009;</code>
     *
     * <pre>
     *建筑升级
     * </pre>
     */
    public static final int MSG_ID_BUILD_LEVEL_UP_VALUE = 1009;
    /**
     * <code>MSG_ID_BUILD_SHOW = 1010;</code>
     *
     * <pre>
     *打开建筑面板
     * </pre>
     */
    public static final int MSG_ID_BUILD_SHOW_VALUE = 1010;
    /**
     * <code>MSG_ID_STUDY_TECH = 1011;</code>
     *
     * <pre>
     *学习科技
     * </pre>
     */
    public static final int MSG_ID_STUDY_TECH_VALUE = 1011;
    /**
     * <code>MSG_ID_LAND_DONATION = 1012;</code>
     *
     * <pre>
     *岛屿捐献
     * </pre>
     */
    public static final int MSG_ID_LAND_DONATION_VALUE = 1012;
    /**
     * <code>MSG_ID_PRODUCTION_TROOP = 1013;</code>
     *
     * <pre>
     *生产部队
     * </pre>
     */
    public static final int MSG_ID_PRODUCTION_TROOP_VALUE = 1013;
    /**
     * <code>MSG_ID_BUY_SHIP = 1014;</code>
     *
     * <pre>
     *购买运输船
     * </pre>
     */
    public static final int MSG_ID_BUY_SHIP_VALUE = 1014;
    /**
     * <code>MSG_ID_SHOW_CITY = 1015;</code>
     *
     * <pre>
     *显示城市
     * </pre>
     */
    public static final int MSG_ID_SHOW_CITY_VALUE = 1015;
    /**
     * <code>MSG_ID_SHOW_LAND = 1016;</code>
     *
     * <pre>
     *显示岛屿
     * </pre>
     */
    public static final int MSG_ID_SHOW_LAND_VALUE = 1016;
    /**
     * <code>MSG_ID_SHOW_WORLD = 1017;</code>
     *
     * <pre>
     *显示世界
     * </pre>
     */
    public static final int MSG_ID_SHOW_WORLD_VALUE = 1017;
    /**
     * <code>MSG_ID_CREATE_BUILDING = 1018;</code>
     *
     * <pre>
     *建造一个建筑
     * </pre>
     */
    public static final int MSG_ID_CREATE_BUILDING_VALUE = 1018;
    /**
     * <code>MSG_ID_SHOW_LAND_RESOURCE = 1019;</code>
     *
     * <pre>
     *点击岛屿的资源矿
     * </pre>
     */
    public static final int MSG_ID_SHOW_LAND_RESOURCE_VALUE = 1019;
    /**
     * <code>MSG_ID_SPEEDY_BUILDING = 1020;</code>
     *
     * <pre>
     *加速建造
     * </pre>
     */
    public static final int MSG_ID_SPEEDY_BUILDING_VALUE = 1020;
    /**
     * <code>MSG_ID_CHECK_BUILD = 1021;</code>
     *
     * <pre>
     *检查建筑状态
     * </pre>
     */
    public static final int MSG_ID_CHECK_BUILD_VALUE = 1021;
    /**
     * <code>MSG_ID_SET_WORKER = 1022;</code>
     *
     * <pre>
     *设置资源矿的工人
     * </pre>
     */
    public static final int MSG_ID_SET_WORKER_VALUE = 1022;
    /**
     * <code>MSG_ID_SET_PUB_LEVEL = 1023;</code>
     *
     * <pre>
     *设置酒馆、饭店的消耗等级
     * </pre>
     */
    public static final int MSG_ID_SET_PUB_LEVEL_VALUE = 1023;
    /**
     * <code>MSG_ID_SET_TECHER = 1024;</code>
     *
     * <pre>
     *设置科学家数量
     * </pre>
     */
    public static final int MSG_ID_SET_TECHER_VALUE = 1024;
    /**
     * <code>MSG_ID_SHOW_TECH_BUILD = 1025;</code>
     *
     * <pre>
     *点击研究院，显示的面板
     * </pre>
     */
    public static final int MSG_ID_SHOW_TECH_BUILD_VALUE = 1025;
    /**
     * <code>MSG_ID_UPDATE_RESOURCE = 1026;</code>
     *
     * <pre>
     *更新资源
     * </pre>
     */
    public static final int MSG_ID_UPDATE_RESOURCE_VALUE = 1026;
    /**
     * <code>MSG_ID_UPDATE_PLAYER_INFO = 1027;</code>
     *
     * <pre>
     *更新角色的全局信息
     * </pre>
     */
    public static final int MSG_ID_UPDATE_PLAYER_INFO_VALUE = 1027;
    /**
     * <code>MSG_ID_SHOW_TECH_PROGRESS = 1028;</code>
     *
     * <pre>
     *显示科技的进度
     * </pre>
     */
    public static final int MSG_ID_SHOW_TECH_PROGRESS_VALUE = 1028;
    /**
     * <code>MSG_ID_CHANGE_CITY_NAME = 1029;</code>
     *
     * <pre>
     *更改城市名字
     * </pre>
     */
    public static final int MSG_ID_CHANGE_CITY_NAME_VALUE = 1029;
    /**
     * <code>MSG_ID_CREATE_CITY = 1031;</code>
     *
     * <pre>
     *创建分城
     * </pre>
     */
    public static final int MSG_ID_CREATE_CITY_VALUE = 1031;
    /**
     * <code>MSG_ID_MOVE_CITY = 1032;</code>
     *
     * <pre>
     *迁城
     * </pre>
     */
    public static final int MSG_ID_MOVE_CITY_VALUE = 1032;
    /**
     * <code>MSG_ID_CANCEL_PRODUCTION_TROOP = 1033;</code>
     *
     * <pre>
     *取消生产部队
     * </pre>
     */
    public static final int MSG_ID_CANCEL_PRODUCTION_TROOP_VALUE = 1033;
    /**
     * <code>MSG_ID_DISBAND_TROOP = 1034;</code>
     *
     * <pre>
     *解散部队
     * </pre>
     */
    public static final int MSG_ID_DISBAND_TROOP_VALUE = 1034;
    /**
     * <code>MSG_ID_SET_CAPITAL = 1035;</code>
     *
     * <pre>
     *设置为首都
     * </pre>
     */
    public static final int MSG_ID_SET_CAPITAL_VALUE = 1035;
    /**
     * <code>MSG_ID_CHANGE_SYSTEM = 1036;</code>
     *
     * <pre>
     *革命
     * </pre>
     */
    public static final int MSG_ID_CHANGE_SYSTEM_VALUE = 1036;
    /**
     * <code>MSG_ID_GET_PLAYER_PACKITEM = 1037;</code>
     *
     * <pre>
     *背包数据
     * </pre>
     */
    public static final int MSG_ID_GET_PLAYER_PACKITEM_VALUE = 1037;
    /**
     * <code>MSG_ID_GET_SHOP_SHELF = 1038;</code>
     *
     * <pre>
     *商店
     * </pre>
     */
    public static final int MSG_ID_GET_SHOP_SHELF_VALUE = 1038;
    /**
     * <code>MSG_ID_SHOW_BUY_SHIP = 1039;</code>
     *
     * <pre>
     *打开购买运输船的界面
     * </pre>
     */
    public static final int MSG_ID_SHOW_BUY_SHIP_VALUE = 1039;
    /**
     * <code>MSG_ID_SHOW_KING_INFO = 1040;</code>
     *
     * <pre>
     *显示国王信息
     * </pre>
     */
    public static final int MSG_ID_SHOW_KING_INFO_VALUE = 1040;
    /**
     * <code>MSG_ID_SHOW_RANK = 1041;</code>
     *
     * <pre>
     *显示排行信息
     * </pre>
     */
    public static final int MSG_ID_SHOW_RANK_VALUE = 1041;
    /**
     * <code>MSG_ID_CANCEL_TRANSPORT_TASK = 1042;</code>
     *
     * <pre>
     *取消运输船任务
     * </pre>
     */
    public static final int MSG_ID_CANCEL_TRANSPORT_TASK_VALUE = 1042;
    /**
     * <code>MSG_ID_START_TRANSPORT_TASK = 1043;</code>
     *
     * <pre>
     *开始运输船任务
     * </pre>
     */
    public static final int MSG_ID_START_TRANSPORT_TASK_VALUE = 1043;
    /**
     * <code>MSG_ID_OVER_TRANSPORT_TASK = 1044;</code>
     *
     * <pre>
     *立即完成运输船任务
     * </pre>
     */
    public static final int MSG_ID_OVER_TRANSPORT_TASK_VALUE = 1044;
    /**
     * <code>MSG_ID_BUY_PERSON = 1045;</code>
     *
     * <pre>
     *购买人口
     * </pre>
     */
    public static final int MSG_ID_BUY_PERSON_VALUE = 1045;
    /**
     * <code>MSG_ID_QUERY_MARKET_ORDER = 1046;</code>
     *
     * <pre>
     *查询市场订单
     * </pre>
     */
    public static final int MSG_ID_QUERY_MARKET_ORDER_VALUE = 1046;
    /**
     * <code>MSG_ID_CREATE_CITY_ORDER = 1047;</code>
     *
     * <pre>
     *创建订单
     * </pre>
     */
    public static final int MSG_ID_CREATE_CITY_ORDER_VALUE = 1047;
    /**
     * <code>MSG_ID_SHOW_MY_ORDER = 1048;</code>
     *
     * <pre>
     *查询我的订单
     * </pre>
     */
    public static final int MSG_ID_SHOW_MY_ORDER_VALUE = 1048;
    /**
     * <code>MSG_ID_GM_COMMAND = 1049;</code>
     *
     * <pre>
     *gm模式命令
     * </pre>
     */
    public static final int MSG_ID_GM_COMMAND_VALUE = 1049;
    /**
     * <code>MSG_ID_DEAL = 1050;</code>
     *
     * <pre>
     *交易
     * </pre>
     */
    public static final int MSG_ID_DEAL_VALUE = 1050;
    /**
     * <code>MSG_ID_MILITARY_INFO = 1051;</code>
     *
     * <pre>
     *军事顾问
     * </pre>
     */
    public static final int MSG_ID_MILITARY_INFO_VALUE = 1051;
    /**
     * <code>MSG_ID_MILITARY_ACTION = 1052;</code>
     *
     * <pre>
     *军事行动
     * </pre>
     */
    public static final int MSG_ID_MILITARY_ACTION_VALUE = 1052;
    /**
     * <code>MSG_ID_BATTLE_LIST = 1053;</code>
     *
     * <pre>
     *战斗列表
     * </pre>
     */
    public static final int MSG_ID_BATTLE_LIST_VALUE = 1053;
    /**
     * <code>MSG_ID_ROUND_LIST = 1054;</code>
     *
     * <pre>
     *回合列表
     * </pre>
     */
    public static final int MSG_ID_ROUND_LIST_VALUE = 1054;
    /**
     * <code>MSG_ID_ROUND_DETAIL = 1055;</code>
     *
     * <pre>
     *回合详情
     * </pre>
     */
    public static final int MSG_ID_ROUND_DETAIL_VALUE = 1055;


    public final int getNumber() { return value; }

    public static MessageType valueOf(int value) {
      switch (value) {
        case 1000: return MSG_ID_LOGIN;
        case 1001: return MSG_ID_CHECK_VERSION;
        case 1002: return MSG_ID_PING;
        case 1003: return MSG_ID_BIND_ACCOUNT;
        case 1004: return MSG_ID_CHECK_GAMECENTER;
        case 1005: return MSG_ID_PAYMENT;
        case 1006: return MSG_ID_FUNCTION_SWITCH;
        case 1007: return MSG_ID_CREATE_PLAYER;
        case 1008: return MSG_ID_NEW_PLAYER_PROGRESS;
        case 1009: return MSG_ID_BUILD_LEVEL_UP;
        case 1010: return MSG_ID_BUILD_SHOW;
        case 1011: return MSG_ID_STUDY_TECH;
        case 1012: return MSG_ID_LAND_DONATION;
        case 1013: return MSG_ID_PRODUCTION_TROOP;
        case 1014: return MSG_ID_BUY_SHIP;
        case 1015: return MSG_ID_SHOW_CITY;
        case 1016: return MSG_ID_SHOW_LAND;
        case 1017: return MSG_ID_SHOW_WORLD;
        case 1018: return MSG_ID_CREATE_BUILDING;
        case 1019: return MSG_ID_SHOW_LAND_RESOURCE;
        case 1020: return MSG_ID_SPEEDY_BUILDING;
        case 1021: return MSG_ID_CHECK_BUILD;
        case 1022: return MSG_ID_SET_WORKER;
        case 1023: return MSG_ID_SET_PUB_LEVEL;
        case 1024: return MSG_ID_SET_TECHER;
        case 1025: return MSG_ID_SHOW_TECH_BUILD;
        case 1026: return MSG_ID_UPDATE_RESOURCE;
        case 1027: return MSG_ID_UPDATE_PLAYER_INFO;
        case 1028: return MSG_ID_SHOW_TECH_PROGRESS;
        case 1029: return MSG_ID_CHANGE_CITY_NAME;
        case 1031: return MSG_ID_CREATE_CITY;
        case 1032: return MSG_ID_MOVE_CITY;
        case 1033: return MSG_ID_CANCEL_PRODUCTION_TROOP;
        case 1034: return MSG_ID_DISBAND_TROOP;
        case 1035: return MSG_ID_SET_CAPITAL;
        case 1036: return MSG_ID_CHANGE_SYSTEM;
        case 1037: return MSG_ID_GET_PLAYER_PACKITEM;
        case 1038: return MSG_ID_GET_SHOP_SHELF;
        case 1039: return MSG_ID_SHOW_BUY_SHIP;
        case 1040: return MSG_ID_SHOW_KING_INFO;
        case 1041: return MSG_ID_SHOW_RANK;
        case 1042: return MSG_ID_CANCEL_TRANSPORT_TASK;
        case 1043: return MSG_ID_START_TRANSPORT_TASK;
        case 1044: return MSG_ID_OVER_TRANSPORT_TASK;
        case 1045: return MSG_ID_BUY_PERSON;
        case 1046: return MSG_ID_QUERY_MARKET_ORDER;
        case 1047: return MSG_ID_CREATE_CITY_ORDER;
        case 1048: return MSG_ID_SHOW_MY_ORDER;
        case 1049: return MSG_ID_GM_COMMAND;
        case 1050: return MSG_ID_DEAL;
        case 1051: return MSG_ID_MILITARY_INFO;
        case 1052: return MSG_ID_MILITARY_ACTION;
        case 1053: return MSG_ID_BATTLE_LIST;
        case 1054: return MSG_ID_ROUND_LIST;
        case 1055: return MSG_ID_ROUND_DETAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.litgame.wargame.core.auto.GameGlobalProtos.getDescriptor().getEnumTypes().get(6);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:litgame.game.MessageType)
  }

  /**
   * Protobuf enum {@code litgame.game.MessageCode}
   *
   * <pre>
   *错误码
   * </pre>
   */
  public enum MessageCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OK = 1;</code>
     */
    OK(0, 1),
    /**
     * <code>ERR = 2;</code>
     */
    ERR(1, 2),
    /**
     * <code>NOT_FOUND_PLAYER = 3;</code>
     *
     * <pre>
     *没有这个玩家
     * </pre>
     */
    NOT_FOUND_PLAYER(2, 3),
    /**
     * <code>SESSION_EXPIRE = 4;</code>
     *
     * <pre>
     *会话过期
     * </pre>
     */
    SESSION_EXPIRE(3, 4),
    /**
     * <code>NOT_ENOUGH_RESOURCE = 5;</code>
     *
     * <pre>
     *没有足够的资源
     * </pre>
     */
    NOT_ENOUGH_RESOURCE(4, 5),
    /**
     * <code>NOT_ENOUGH_TECH_POINT = 6;</code>
     *
     * <pre>
     *没有足够的科技点
     * </pre>
     */
    NOT_ENOUGH_TECH_POINT(5, 6),
    /**
     * <code>NOT_ENOUGH_LEVEL = 7;</code>
     *
     * <pre>
     *等级不够
     * </pre>
     */
    NOT_ENOUGH_LEVEL(6, 7),
    /**
     * <code>NOT_FOUND_BUILDING = 8;</code>
     *
     * <pre>
     *没有找到建筑
     * </pre>
     */
    NOT_FOUND_BUILDING(7, 8),
    /**
     * <code>HAD_BUILDING_POSITION = 9;</code>
     *
     * <pre>
     *该建造点已经有建筑了
     * </pre>
     */
    HAD_BUILDING_POSITION(8, 9),
    /**
     * <code>NOT_ENOUGH_PERSON = 10;</code>
     *
     * <pre>
     *没有足够的人口
     * </pre>
     */
    NOT_ENOUGH_PERSON(9, 10),
    /**
     * <code>HAD_LIMIT_PERSON = 11;</code>
     *
     * <pre>
     *超出人口上限
     * </pre>
     */
    HAD_LIMIT_PERSON(10, 11),
    /**
     * <code>NOT_NEED_SPEEDY = 12;</code>
     *
     * <pre>
     *不需要加速，已完成
     * </pre>
     */
    NOT_NEED_SPEEDY(11, 12),
    /**
     * <code>HAD_MAX_LEVEL = 13;</code>
     *
     * <pre>
     *已经达到最大等级
     * </pre>
     */
    HAD_MAX_LEVEL(12, 13),
    /**
     * <code>DATA_EXPIRE = 14;</code>
     *
     * <pre>
     *客户端存储的playerId已过期，需要删除，重新创建角色。因为服务器端已删除了这个用户的数据
     * </pre>
     */
    DATA_EXPIRE(13, 14),
    /**
     * <code>NOT_FOUND_LAND = 15;</code>
     *
     * <pre>
     *没有找到这个岛屿
     * </pre>
     */
    NOT_FOUND_LAND(14, 15),
    /**
     * <code>NOT_FOUND_CITY = 16;</code>
     *
     * <pre>
     *没有找到这个城市
     * </pre>
     */
    NOT_FOUND_CITY(15, 16),
    /**
     * <code>Resource_IS_Building = 17;</code>
     *
     * <pre>
     *资源矿升级中，不可以捐献
     * </pre>
     */
    Resource_IS_Building(16, 17),
    /**
     * <code>Resource_Donation_Count_ERR = 18;</code>
     *
     * <pre>
     *捐献数量溢出了，重新请求本页面
     * </pre>
     */
    Resource_Donation_Count_ERR(17, 18),
    /**
     * <code>NOT_FOUND_TECH = 19;</code>
     *
     * <pre>
     *没有找到科学院
     * </pre>
     */
    NOT_FOUND_TECH(18, 19),
    /**
     * <code>HAD_LIMIT_TECHER = 20;</code>
     *
     * <pre>
     *超过了科学家的上限
     * </pre>
     */
    HAD_LIMIT_TECHER(19, 20),
    /**
     * <code>HAD_STUDY_TECH = 22;</code>
     *
     * <pre>
     *已经学习了该科技
     * </pre>
     */
    HAD_STUDY_TECH(20, 22),
    /**
     * <code>NOT_FOUND_TECH_ID = 23;</code>
     *
     * <pre>
     *没有找到这个科技
     * </pre>
     */
    NOT_FOUND_TECH_ID(21, 23),
    /**
     * <code>CAN_NOT_STUDY_TEACH = 24;</code>
     *
     * <pre>
     *不能学习本科技
     * </pre>
     */
    CAN_NOT_STUDY_TEACH(22, 24),
    /**
     * <code>INVALID_NAME = 25;</code>
     *
     * <pre>
     *非法的名字
     * </pre>
     */
    INVALID_NAME(23, 25),
    /**
     * <code>HAD_LIMIT_BUILD = 26;</code>
     *
     * <pre>
     *该建筑已经达到了最大数量，不能再建造了
     * </pre>
     */
    HAD_LIMIT_BUILD(24, 26),
    /**
     * <code>NOT_FOUND_TROOP_RES = 27;</code>
     *
     * <pre>
     *没有找到兵种的配置信息
     * </pre>
     */
    NOT_FOUND_TROOP_RES(25, 27),
    /**
     * <code>HAD_LIMIT_TROOP = 28;</code>
     *
     * <pre>
     *超过了军队上限
     * </pre>
     */
    HAD_LIMIT_TROOP(26, 28),
    /**
     * <code>HAD_PRODUCTION_TROOP = 29;</code>
     *
     * <pre>
     *正在生产部队，无法增加新的生产队列
     * </pre>
     */
    HAD_PRODUCTION_TROOP(27, 29),
    /**
     * <code>NOT_ENOUGH_KING_BUILD_LEVEL = 30;</code>
     *
     * <pre>
     *没有足够的王宫等级
     * </pre>
     */
    NOT_ENOUGH_KING_BUILD_LEVEL(28, 30),
    /**
     * <code>NOT_ENOUGH_TRANSPORTATION = 31;</code>
     *
     * <pre>
     *没有足够的运输船
     * </pre>
     */
    NOT_ENOUGH_TRANSPORTATION(29, 31),
    /**
     * <code>NOT_ENOUGH_BUILDING_LEVEL = 32;</code>
     *
     * <pre>
     *建筑等级不够
     * </pre>
     */
    NOT_ENOUGH_BUILDING_LEVEL(30, 32),
    /**
     * <code>NOT_ENOUGH_TECH = 33;</code>
     *
     * <pre>
     *科技未解锁
     * </pre>
     */
    NOT_ENOUGH_TECH(31, 33),
    /**
     * <code>NOT_FOUND_TROOP = 34;</code>
     *
     * <pre>
     *没有找到部队信息
     * </pre>
     */
    NOT_FOUND_TROOP(32, 34),
    /**
     * <code>HAD_CHANGE_SYSTEM = 35;</code>
     *
     * <pre>
     *已经在革命中
     * </pre>
     */
    HAD_CHANGE_SYSTEM(33, 35),
    /**
     * <code>CAN_NOT_CHANGE_SYSTEM = 36;</code>
     *
     * <pre>
     *条件不满足，不能变更为目标政体
     * </pre>
     */
    CAN_NOT_CHANGE_SYSTEM(34, 36),
    /**
     * <code>NOT_ENOUGH_GOLD = 37;</code>
     *
     * <pre>
     *没有足够的金币
     * </pre>
     */
    NOT_ENOUGH_GOLD(35, 37),
    /**
     * <code>NOT_ENOUGH_DIAMOND = 38;</code>
     *
     * <pre>
     *没有足够的钻石
     * </pre>
     */
    NOT_ENOUGH_DIAMOND(36, 38),
    /**
     * <code>HAD_LIMIT_COUNT = 39;</code>
     *
     * <pre>
     *已经达到了最大数量限制
     * </pre>
     */
    HAD_LIMIT_COUNT(37, 39),
    /**
     * <code>NOT_ENOUGH_KING_BUILD = 40;</code>
     *
     * <pre>
     *没有王宫，或者王宫等级不够
     * </pre>
     */
    NOT_ENOUGH_KING_BUILD(38, 40),
    /**
     * <code>NOT_FOUND_WHARF = 41;</code>
     *
     * <pre>
     *没有码头
     * </pre>
     */
    NOT_FOUND_WHARF(39, 41),
    /**
     * <code>HAD_CITY_POSITION = 42;</code>
     *
     * <pre>
     *这个位置已经有城市了
     * </pre>
     */
    HAD_CITY_POSITION(40, 42),
    /**
     * <code>CITY_IS_BUILDING = 43;</code>
     *
     * <pre>
     *城市还在建造中
     * </pre>
     */
    CITY_IS_BUILDING(41, 43),
    /**
     * <code>NOT_ENOUGH_WOOD = 44;</code>
     *
     * <pre>
     *没有足够的木头
     * </pre>
     */
    NOT_ENOUGH_WOOD(42, 44),
    /**
     * <code>NOT_ENOUGH_STONE = 45;</code>
     *
     * <pre>
     *没有足够的石头
     * </pre>
     */
    NOT_ENOUGH_STONE(43, 45),
    /**
     * <code>NOT_ENOUGH_CRYSTAL = 46;</code>
     *
     * <pre>
     *没有足够的水晶
     * </pre>
     */
    NOT_ENOUGH_CRYSTAL(44, 46),
    /**
     * <code>NOT_ENOUGH_METAL = 47;</code>
     *
     * <pre>
     *没有足够的金属
     * </pre>
     */
    NOT_ENOUGH_METAL(45, 47),
    /**
     * <code>NOT_ENOUGH_FOOD = 48;</code>
     *
     * <pre>
     *没有足够的粮食
     * </pre>
     */
    NOT_ENOUGH_FOOD(46, 48),
    /**
     * <code>ONLY_OPER_SELF_DATA = 49;</code>
     *
     * <pre>
     *只能操作自己的数据
     * </pre>
     */
    ONLY_OPER_SELF_DATA(47, 49),
    /**
     * <code>NOT_FOUND_GAME_ACTION = 50;</code>
     *
     * <pre>
     *没有找到这个运输任务
     * </pre>
     */
    NOT_FOUND_GAME_ACTION(48, 50),
    /**
     * <code>HAD_LIMIT_MARKET_COUNT = 51;</code>
     *
     * <pre>
     *超过了市场的存储容量
     * </pre>
     */
    HAD_LIMIT_MARKET_COUNT(49, 51),
    /**
     * <code>NOT_FOUND_MARKET = 52;</code>
     *
     * <pre>
     *没有找到市场
     * </pre>
     */
    NOT_FOUND_MARKET(50, 52),
    /**
     * <code>HAD_LIMIT_PRICE = 53;</code>
     *
     * <pre>
     *超过了市场的价格区间
     * </pre>
     */
    HAD_LIMIT_PRICE(51, 53),
    /**
     * <code>NOT_ENOUGH_TROOP = 54;</code>
     *
     * <pre>
     *军队不够
     * </pre>
     */
    NOT_ENOUGH_TROOP(52, 54),
    ;

    /**
     * <code>OK = 1;</code>
     */
    public static final int OK_VALUE = 1;
    /**
     * <code>ERR = 2;</code>
     */
    public static final int ERR_VALUE = 2;
    /**
     * <code>NOT_FOUND_PLAYER = 3;</code>
     *
     * <pre>
     *没有这个玩家
     * </pre>
     */
    public static final int NOT_FOUND_PLAYER_VALUE = 3;
    /**
     * <code>SESSION_EXPIRE = 4;</code>
     *
     * <pre>
     *会话过期
     * </pre>
     */
    public static final int SESSION_EXPIRE_VALUE = 4;
    /**
     * <code>NOT_ENOUGH_RESOURCE = 5;</code>
     *
     * <pre>
     *没有足够的资源
     * </pre>
     */
    public static final int NOT_ENOUGH_RESOURCE_VALUE = 5;
    /**
     * <code>NOT_ENOUGH_TECH_POINT = 6;</code>
     *
     * <pre>
     *没有足够的科技点
     * </pre>
     */
    public static final int NOT_ENOUGH_TECH_POINT_VALUE = 6;
    /**
     * <code>NOT_ENOUGH_LEVEL = 7;</code>
     *
     * <pre>
     *等级不够
     * </pre>
     */
    public static final int NOT_ENOUGH_LEVEL_VALUE = 7;
    /**
     * <code>NOT_FOUND_BUILDING = 8;</code>
     *
     * <pre>
     *没有找到建筑
     * </pre>
     */
    public static final int NOT_FOUND_BUILDING_VALUE = 8;
    /**
     * <code>HAD_BUILDING_POSITION = 9;</code>
     *
     * <pre>
     *该建造点已经有建筑了
     * </pre>
     */
    public static final int HAD_BUILDING_POSITION_VALUE = 9;
    /**
     * <code>NOT_ENOUGH_PERSON = 10;</code>
     *
     * <pre>
     *没有足够的人口
     * </pre>
     */
    public static final int NOT_ENOUGH_PERSON_VALUE = 10;
    /**
     * <code>HAD_LIMIT_PERSON = 11;</code>
     *
     * <pre>
     *超出人口上限
     * </pre>
     */
    public static final int HAD_LIMIT_PERSON_VALUE = 11;
    /**
     * <code>NOT_NEED_SPEEDY = 12;</code>
     *
     * <pre>
     *不需要加速，已完成
     * </pre>
     */
    public static final int NOT_NEED_SPEEDY_VALUE = 12;
    /**
     * <code>HAD_MAX_LEVEL = 13;</code>
     *
     * <pre>
     *已经达到最大等级
     * </pre>
     */
    public static final int HAD_MAX_LEVEL_VALUE = 13;
    /**
     * <code>DATA_EXPIRE = 14;</code>
     *
     * <pre>
     *客户端存储的playerId已过期，需要删除，重新创建角色。因为服务器端已删除了这个用户的数据
     * </pre>
     */
    public static final int DATA_EXPIRE_VALUE = 14;
    /**
     * <code>NOT_FOUND_LAND = 15;</code>
     *
     * <pre>
     *没有找到这个岛屿
     * </pre>
     */
    public static final int NOT_FOUND_LAND_VALUE = 15;
    /**
     * <code>NOT_FOUND_CITY = 16;</code>
     *
     * <pre>
     *没有找到这个城市
     * </pre>
     */
    public static final int NOT_FOUND_CITY_VALUE = 16;
    /**
     * <code>Resource_IS_Building = 17;</code>
     *
     * <pre>
     *资源矿升级中，不可以捐献
     * </pre>
     */
    public static final int Resource_IS_Building_VALUE = 17;
    /**
     * <code>Resource_Donation_Count_ERR = 18;</code>
     *
     * <pre>
     *捐献数量溢出了，重新请求本页面
     * </pre>
     */
    public static final int Resource_Donation_Count_ERR_VALUE = 18;
    /**
     * <code>NOT_FOUND_TECH = 19;</code>
     *
     * <pre>
     *没有找到科学院
     * </pre>
     */
    public static final int NOT_FOUND_TECH_VALUE = 19;
    /**
     * <code>HAD_LIMIT_TECHER = 20;</code>
     *
     * <pre>
     *超过了科学家的上限
     * </pre>
     */
    public static final int HAD_LIMIT_TECHER_VALUE = 20;
    /**
     * <code>HAD_STUDY_TECH = 22;</code>
     *
     * <pre>
     *已经学习了该科技
     * </pre>
     */
    public static final int HAD_STUDY_TECH_VALUE = 22;
    /**
     * <code>NOT_FOUND_TECH_ID = 23;</code>
     *
     * <pre>
     *没有找到这个科技
     * </pre>
     */
    public static final int NOT_FOUND_TECH_ID_VALUE = 23;
    /**
     * <code>CAN_NOT_STUDY_TEACH = 24;</code>
     *
     * <pre>
     *不能学习本科技
     * </pre>
     */
    public static final int CAN_NOT_STUDY_TEACH_VALUE = 24;
    /**
     * <code>INVALID_NAME = 25;</code>
     *
     * <pre>
     *非法的名字
     * </pre>
     */
    public static final int INVALID_NAME_VALUE = 25;
    /**
     * <code>HAD_LIMIT_BUILD = 26;</code>
     *
     * <pre>
     *该建筑已经达到了最大数量，不能再建造了
     * </pre>
     */
    public static final int HAD_LIMIT_BUILD_VALUE = 26;
    /**
     * <code>NOT_FOUND_TROOP_RES = 27;</code>
     *
     * <pre>
     *没有找到兵种的配置信息
     * </pre>
     */
    public static final int NOT_FOUND_TROOP_RES_VALUE = 27;
    /**
     * <code>HAD_LIMIT_TROOP = 28;</code>
     *
     * <pre>
     *超过了军队上限
     * </pre>
     */
    public static final int HAD_LIMIT_TROOP_VALUE = 28;
    /**
     * <code>HAD_PRODUCTION_TROOP = 29;</code>
     *
     * <pre>
     *正在生产部队，无法增加新的生产队列
     * </pre>
     */
    public static final int HAD_PRODUCTION_TROOP_VALUE = 29;
    /**
     * <code>NOT_ENOUGH_KING_BUILD_LEVEL = 30;</code>
     *
     * <pre>
     *没有足够的王宫等级
     * </pre>
     */
    public static final int NOT_ENOUGH_KING_BUILD_LEVEL_VALUE = 30;
    /**
     * <code>NOT_ENOUGH_TRANSPORTATION = 31;</code>
     *
     * <pre>
     *没有足够的运输船
     * </pre>
     */
    public static final int NOT_ENOUGH_TRANSPORTATION_VALUE = 31;
    /**
     * <code>NOT_ENOUGH_BUILDING_LEVEL = 32;</code>
     *
     * <pre>
     *建筑等级不够
     * </pre>
     */
    public static final int NOT_ENOUGH_BUILDING_LEVEL_VALUE = 32;
    /**
     * <code>NOT_ENOUGH_TECH = 33;</code>
     *
     * <pre>
     *科技未解锁
     * </pre>
     */
    public static final int NOT_ENOUGH_TECH_VALUE = 33;
    /**
     * <code>NOT_FOUND_TROOP = 34;</code>
     *
     * <pre>
     *没有找到部队信息
     * </pre>
     */
    public static final int NOT_FOUND_TROOP_VALUE = 34;
    /**
     * <code>HAD_CHANGE_SYSTEM = 35;</code>
     *
     * <pre>
     *已经在革命中
     * </pre>
     */
    public static final int HAD_CHANGE_SYSTEM_VALUE = 35;
    /**
     * <code>CAN_NOT_CHANGE_SYSTEM = 36;</code>
     *
     * <pre>
     *条件不满足，不能变更为目标政体
     * </pre>
     */
    public static final int CAN_NOT_CHANGE_SYSTEM_VALUE = 36;
    /**
     * <code>NOT_ENOUGH_GOLD = 37;</code>
     *
     * <pre>
     *没有足够的金币
     * </pre>
     */
    public static final int NOT_ENOUGH_GOLD_VALUE = 37;
    /**
     * <code>NOT_ENOUGH_DIAMOND = 38;</code>
     *
     * <pre>
     *没有足够的钻石
     * </pre>
     */
    public static final int NOT_ENOUGH_DIAMOND_VALUE = 38;
    /**
     * <code>HAD_LIMIT_COUNT = 39;</code>
     *
     * <pre>
     *已经达到了最大数量限制
     * </pre>
     */
    public static final int HAD_LIMIT_COUNT_VALUE = 39;
    /**
     * <code>NOT_ENOUGH_KING_BUILD = 40;</code>
     *
     * <pre>
     *没有王宫，或者王宫等级不够
     * </pre>
     */
    public static final int NOT_ENOUGH_KING_BUILD_VALUE = 40;
    /**
     * <code>NOT_FOUND_WHARF = 41;</code>
     *
     * <pre>
     *没有码头
     * </pre>
     */
    public static final int NOT_FOUND_WHARF_VALUE = 41;
    /**
     * <code>HAD_CITY_POSITION = 42;</code>
     *
     * <pre>
     *这个位置已经有城市了
     * </pre>
     */
    public static final int HAD_CITY_POSITION_VALUE = 42;
    /**
     * <code>CITY_IS_BUILDING = 43;</code>
     *
     * <pre>
     *城市还在建造中
     * </pre>
     */
    public static final int CITY_IS_BUILDING_VALUE = 43;
    /**
     * <code>NOT_ENOUGH_WOOD = 44;</code>
     *
     * <pre>
     *没有足够的木头
     * </pre>
     */
    public static final int NOT_ENOUGH_WOOD_VALUE = 44;
    /**
     * <code>NOT_ENOUGH_STONE = 45;</code>
     *
     * <pre>
     *没有足够的石头
     * </pre>
     */
    public static final int NOT_ENOUGH_STONE_VALUE = 45;
    /**
     * <code>NOT_ENOUGH_CRYSTAL = 46;</code>
     *
     * <pre>
     *没有足够的水晶
     * </pre>
     */
    public static final int NOT_ENOUGH_CRYSTAL_VALUE = 46;
    /**
     * <code>NOT_ENOUGH_METAL = 47;</code>
     *
     * <pre>
     *没有足够的金属
     * </pre>
     */
    public static final int NOT_ENOUGH_METAL_VALUE = 47;
    /**
     * <code>NOT_ENOUGH_FOOD = 48;</code>
     *
     * <pre>
     *没有足够的粮食
     * </pre>
     */
    public static final int NOT_ENOUGH_FOOD_VALUE = 48;
    /**
     * <code>ONLY_OPER_SELF_DATA = 49;</code>
     *
     * <pre>
     *只能操作自己的数据
     * </pre>
     */
    public static final int ONLY_OPER_SELF_DATA_VALUE = 49;
    /**
     * <code>NOT_FOUND_GAME_ACTION = 50;</code>
     *
     * <pre>
     *没有找到这个运输任务
     * </pre>
     */
    public static final int NOT_FOUND_GAME_ACTION_VALUE = 50;
    /**
     * <code>HAD_LIMIT_MARKET_COUNT = 51;</code>
     *
     * <pre>
     *超过了市场的存储容量
     * </pre>
     */
    public static final int HAD_LIMIT_MARKET_COUNT_VALUE = 51;
    /**
     * <code>NOT_FOUND_MARKET = 52;</code>
     *
     * <pre>
     *没有找到市场
     * </pre>
     */
    public static final int NOT_FOUND_MARKET_VALUE = 52;
    /**
     * <code>HAD_LIMIT_PRICE = 53;</code>
     *
     * <pre>
     *超过了市场的价格区间
     * </pre>
     */
    public static final int HAD_LIMIT_PRICE_VALUE = 53;
    /**
     * <code>NOT_ENOUGH_TROOP = 54;</code>
     *
     * <pre>
     *军队不够
     * </pre>
     */
    public static final int NOT_ENOUGH_TROOP_VALUE = 54;


    public final int getNumber() { return value; }

    public static MessageCode valueOf(int value) {
      switch (value) {
        case 1: return OK;
        case 2: return ERR;
        case 3: return NOT_FOUND_PLAYER;
        case 4: return SESSION_EXPIRE;
        case 5: return NOT_ENOUGH_RESOURCE;
        case 6: return NOT_ENOUGH_TECH_POINT;
        case 7: return NOT_ENOUGH_LEVEL;
        case 8: return NOT_FOUND_BUILDING;
        case 9: return HAD_BUILDING_POSITION;
        case 10: return NOT_ENOUGH_PERSON;
        case 11: return HAD_LIMIT_PERSON;
        case 12: return NOT_NEED_SPEEDY;
        case 13: return HAD_MAX_LEVEL;
        case 14: return DATA_EXPIRE;
        case 15: return NOT_FOUND_LAND;
        case 16: return NOT_FOUND_CITY;
        case 17: return Resource_IS_Building;
        case 18: return Resource_Donation_Count_ERR;
        case 19: return NOT_FOUND_TECH;
        case 20: return HAD_LIMIT_TECHER;
        case 22: return HAD_STUDY_TECH;
        case 23: return NOT_FOUND_TECH_ID;
        case 24: return CAN_NOT_STUDY_TEACH;
        case 25: return INVALID_NAME;
        case 26: return HAD_LIMIT_BUILD;
        case 27: return NOT_FOUND_TROOP_RES;
        case 28: return HAD_LIMIT_TROOP;
        case 29: return HAD_PRODUCTION_TROOP;
        case 30: return NOT_ENOUGH_KING_BUILD_LEVEL;
        case 31: return NOT_ENOUGH_TRANSPORTATION;
        case 32: return NOT_ENOUGH_BUILDING_LEVEL;
        case 33: return NOT_ENOUGH_TECH;
        case 34: return NOT_FOUND_TROOP;
        case 35: return HAD_CHANGE_SYSTEM;
        case 36: return CAN_NOT_CHANGE_SYSTEM;
        case 37: return NOT_ENOUGH_GOLD;
        case 38: return NOT_ENOUGH_DIAMOND;
        case 39: return HAD_LIMIT_COUNT;
        case 40: return NOT_ENOUGH_KING_BUILD;
        case 41: return NOT_FOUND_WHARF;
        case 42: return HAD_CITY_POSITION;
        case 43: return CITY_IS_BUILDING;
        case 44: return NOT_ENOUGH_WOOD;
        case 45: return NOT_ENOUGH_STONE;
        case 46: return NOT_ENOUGH_CRYSTAL;
        case 47: return NOT_ENOUGH_METAL;
        case 48: return NOT_ENOUGH_FOOD;
        case 49: return ONLY_OPER_SELF_DATA;
        case 50: return NOT_FOUND_GAME_ACTION;
        case 51: return HAD_LIMIT_MARKET_COUNT;
        case 52: return NOT_FOUND_MARKET;
        case 53: return HAD_LIMIT_PRICE;
        case 54: return NOT_ENOUGH_TROOP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageCode>() {
            public MessageCode findValueByNumber(int number) {
              return MessageCode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.litgame.wargame.core.auto.GameGlobalProtos.getDescriptor().getEnumTypes().get(7);
    }

    private static final MessageCode[] VALUES = values();

    public static MessageCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MessageCode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:litgame.game.MessageCode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014global.proto\022\014litgame.game*@\n\014Platform" +
      "Type\022\007\n\003IOS\020\001\022\006\n\002UC\020\002\022\n\n\006XIAOMI\020\003\022\010\n\004A36" +
      "0\020\004\022\t\n\005BAIDU\020\005*\026\n\010BufferId\022\n\n\006Public\020\001*1" +
      "\n\rVersionStatus\022\n\n\006NORMAL\020\001\022\010\n\004STOP\020\002\022\n\n" +
      "\006UPDATE\020\003*\024\n\007TroopId\022\t\n\004ship\020\341\017*@\n\nMarke" +
      "tType\022\016\n\nMARKET_BUY\020\001\022\017\n\013MARKET_SELL\020\002\022\021" +
      "\n\rMARKET_FRIEND\020\003*\232\001\n\016GameActionType\022\023\n\017" +
      "PRODUCTION_LAND\020\001\022\022\n\016PRODUCTION_FLY\020\002\022\n\n" +
      "\006MARKET\020\003\022\n\n\006BATTLE\020\004\022\r\n\tTRANSPORT\020\005\022\017\n\013" +
      "CREATE_CITY\020\006\022\025\n\021NEXT_STATE_ACTION\020\007\022\020\n\014",
      "BATTLE_ROUND\020\010*\336\013\n\013MessageType\022\021\n\014MSG_ID" +
      "_LOGIN\020\350\007\022\031\n\024MSG_ID_CHECK_VERSION\020\351\007\022\020\n\013" +
      "MSG_ID_PING\020\352\007\022\030\n\023MSG_ID_BIND_ACCOUNT\020\353\007" +
      "\022\034\n\027MSG_ID_CHECK_GAMECENTER\020\354\007\022\023\n\016MSG_ID" +
      "_PAYMENT\020\355\007\022\033\n\026MSG_ID_FUNCTION_SWITCH\020\356\007" +
      "\022\031\n\024MSG_ID_CREATE_PLAYER\020\357\007\022\037\n\032MSG_ID_NE" +
      "W_PLAYER_PROGRESS\020\360\007\022\032\n\025MSG_ID_BUILD_LEV" +
      "EL_UP\020\361\007\022\026\n\021MSG_ID_BUILD_SHOW\020\362\007\022\026\n\021MSG_" +
      "ID_STUDY_TECH\020\363\007\022\031\n\024MSG_ID_LAND_DONATION" +
      "\020\364\007\022\034\n\027MSG_ID_PRODUCTION_TROOP\020\365\007\022\024\n\017MSG",
      "_ID_BUY_SHIP\020\366\007\022\025\n\020MSG_ID_SHOW_CITY\020\367\007\022\025" +
      "\n\020MSG_ID_SHOW_LAND\020\370\007\022\026\n\021MSG_ID_SHOW_WOR" +
      "LD\020\371\007\022\033\n\026MSG_ID_CREATE_BUILDING\020\372\007\022\036\n\031MS" +
      "G_ID_SHOW_LAND_RESOURCE\020\373\007\022\033\n\026MSG_ID_SPE" +
      "EDY_BUILDING\020\374\007\022\027\n\022MSG_ID_CHECK_BUILD\020\375\007" +
      "\022\026\n\021MSG_ID_SET_WORKER\020\376\007\022\031\n\024MSG_ID_SET_P" +
      "UB_LEVEL\020\377\007\022\026\n\021MSG_ID_SET_TECHER\020\200\010\022\033\n\026M" +
      "SG_ID_SHOW_TECH_BUILD\020\201\010\022\033\n\026MSG_ID_UPDAT" +
      "E_RESOURCE\020\202\010\022\036\n\031MSG_ID_UPDATE_PLAYER_IN" +
      "FO\020\203\010\022\036\n\031MSG_ID_SHOW_TECH_PROGRESS\020\204\010\022\034\n",
      "\027MSG_ID_CHANGE_CITY_NAME\020\205\010\022\027\n\022MSG_ID_CR" +
      "EATE_CITY\020\207\010\022\025\n\020MSG_ID_MOVE_CITY\020\210\010\022#\n\036M" +
      "SG_ID_CANCEL_PRODUCTION_TROOP\020\211\010\022\031\n\024MSG_" +
      "ID_DISBAND_TROOP\020\212\010\022\027\n\022MSG_ID_SET_CAPITA" +
      "L\020\213\010\022\031\n\024MSG_ID_CHANGE_SYSTEM\020\214\010\022\037\n\032MSG_I" +
      "D_GET_PLAYER_PACKITEM\020\215\010\022\032\n\025MSG_ID_GET_S" +
      "HOP_SHELF\020\216\010\022\031\n\024MSG_ID_SHOW_BUY_SHIP\020\217\010\022" +
      "\032\n\025MSG_ID_SHOW_KING_INFO\020\220\010\022\025\n\020MSG_ID_SH" +
      "OW_RANK\020\221\010\022!\n\034MSG_ID_CANCEL_TRANSPORT_TA" +
      "SK\020\222\010\022 \n\033MSG_ID_START_TRANSPORT_TASK\020\223\010\022",
      "\037\n\032MSG_ID_OVER_TRANSPORT_TASK\020\224\010\022\026\n\021MSG_" +
      "ID_BUY_PERSON\020\225\010\022\036\n\031MSG_ID_QUERY_MARKET_" +
      "ORDER\020\226\010\022\035\n\030MSG_ID_CREATE_CITY_ORDER\020\227\010\022" +
      "\031\n\024MSG_ID_SHOW_MY_ORDER\020\230\010\022\026\n\021MSG_ID_GM_" +
      "COMMAND\020\231\010\022\020\n\013MSG_ID_DEAL\020\232\010\022\031\n\024MSG_ID_M" +
      "ILITARY_INFO\020\233\010\022\033\n\026MSG_ID_MILITARY_ACTIO" +
      "N\020\234\010\022\027\n\022MSG_ID_BATTLE_LIST\020\235\010\022\026\n\021MSG_ID_" +
      "ROUND_LIST\020\236\010\022\030\n\023MSG_ID_ROUND_DETAIL\020\237\010*" +
      "\304\t\n\013MessageCode\022\006\n\002OK\020\001\022\007\n\003ERR\020\002\022\024\n\020NOT_" +
      "FOUND_PLAYER\020\003\022\022\n\016SESSION_EXPIRE\020\004\022\027\n\023NO",
      "T_ENOUGH_RESOURCE\020\005\022\031\n\025NOT_ENOUGH_TECH_P" +
      "OINT\020\006\022\024\n\020NOT_ENOUGH_LEVEL\020\007\022\026\n\022NOT_FOUN" +
      "D_BUILDING\020\010\022\031\n\025HAD_BUILDING_POSITION\020\t\022" +
      "\025\n\021NOT_ENOUGH_PERSON\020\n\022\024\n\020HAD_LIMIT_PERS" +
      "ON\020\013\022\023\n\017NOT_NEED_SPEEDY\020\014\022\021\n\rHAD_MAX_LEV" +
      "EL\020\r\022\017\n\013DATA_EXPIRE\020\016\022\022\n\016NOT_FOUND_LAND\020" +
      "\017\022\022\n\016NOT_FOUND_CITY\020\020\022\030\n\024Resource_IS_Bui" +
      "lding\020\021\022\037\n\033Resource_Donation_Count_ERR\020\022" +
      "\022\022\n\016NOT_FOUND_TECH\020\023\022\024\n\020HAD_LIMIT_TECHER" +
      "\020\024\022\022\n\016HAD_STUDY_TECH\020\026\022\025\n\021NOT_FOUND_TECH",
      "_ID\020\027\022\027\n\023CAN_NOT_STUDY_TEACH\020\030\022\020\n\014INVALI" +
      "D_NAME\020\031\022\023\n\017HAD_LIMIT_BUILD\020\032\022\027\n\023NOT_FOU" +
      "ND_TROOP_RES\020\033\022\023\n\017HAD_LIMIT_TROOP\020\034\022\030\n\024H" +
      "AD_PRODUCTION_TROOP\020\035\022\037\n\033NOT_ENOUGH_KING" +
      "_BUILD_LEVEL\020\036\022\035\n\031NOT_ENOUGH_TRANSPORTAT" +
      "ION\020\037\022\035\n\031NOT_ENOUGH_BUILDING_LEVEL\020 \022\023\n\017" +
      "NOT_ENOUGH_TECH\020!\022\023\n\017NOT_FOUND_TROOP\020\"\022\025" +
      "\n\021HAD_CHANGE_SYSTEM\020#\022\031\n\025CAN_NOT_CHANGE_" +
      "SYSTEM\020$\022\023\n\017NOT_ENOUGH_GOLD\020%\022\026\n\022NOT_ENO" +
      "UGH_DIAMOND\020&\022\023\n\017HAD_LIMIT_COUNT\020\'\022\031\n\025NO",
      "T_ENOUGH_KING_BUILD\020(\022\023\n\017NOT_FOUND_WHARF" +
      "\020)\022\025\n\021HAD_CITY_POSITION\020*\022\024\n\020CITY_IS_BUI" +
      "LDING\020+\022\023\n\017NOT_ENOUGH_WOOD\020,\022\024\n\020NOT_ENOU" +
      "GH_STONE\020-\022\026\n\022NOT_ENOUGH_CRYSTAL\020.\022\024\n\020NO" +
      "T_ENOUGH_METAL\020/\022\023\n\017NOT_ENOUGH_FOOD\0200\022\027\n" +
      "\023ONLY_OPER_SELF_DATA\0201\022\031\n\025NOT_FOUND_GAME" +
      "_ACTION\0202\022\032\n\026HAD_LIMIT_MARKET_COUNT\0203\022\024\n" +
      "\020NOT_FOUND_MARKET\0204\022\023\n\017HAD_LIMIT_PRICE\0205" +
      "\022\024\n\020NOT_ENOUGH_TROOP\0206B0\n\034cn.litgame.war" +
      "game.core.autoB\020GameGlobalProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
